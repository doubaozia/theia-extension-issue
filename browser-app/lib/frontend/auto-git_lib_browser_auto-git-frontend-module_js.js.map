{"version":3,"file":"auto-git_lib_browser_auto-git-frontend-module_js.js","mappings":"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","sources":["webpack:///../auto-git/src/browser/auto-git-contribution.ts?","webpack:///../auto-git/src/browser/auto-git-frontend-module.ts?","webpack:///../auto-git/src/common/constants.ts?","webpack:///../auto-git/src/common/protocol.ts?"],"sourcesContent":["import { CommandContribution, CommandRegistry} from '@theia/core/lib/common';\nimport { MessageService } from '@theia/core';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { TerminalFrontendContribution } from '@theia/terminal/lib/browser/terminal-frontend-contribution';\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\n\nimport { AutoGitBackendService } from '../common/protocol';\n\nimport { HostedPluginSupport } from '@theia/plugin-ext/lib/hosted/browser/hosted-plugin';\nimport { PluginServer } from '@theia/plugin-ext/lib/common';\nimport { OVSXClientProvider } from '@theia/vsx-registry/lib/common/ovsx-client-provider';\n\n@injectable()\nexport class AutoGitCommandContribution implements CommandContribution {\n\n    constructor(\n        @inject(AutoGitBackendService) private readonly autoGitBackendService: AutoGitBackendService,\n        @inject(MessageService) private readonly messageService: MessageService,\n        @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService,\n        @inject(TerminalFrontendContribution) protected readonly terminalContribution: TerminalFrontendContribution,\n        @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry,\n        @inject(PluginServer) private readonly pluginServer: PluginServer,\n        @inject(HostedPluginSupport) private readonly pluginSupport: HostedPluginSupport,\n        @inject(OVSXClientProvider) private readonly ovsxClientProvider: OVSXClientProvider\n    ) {\n        this.setupGitLoop();\n     }\n\n    registerCommands(registry: CommandRegistry): void {}\n\n    async setupGitLoop() {\n      console.log(this.autoGitBackendService);\n      console.log(this.messageService);\n      console.log(this.workspaceService);\n      console.log(this.terminalContribution);\n      console.log(this.commandRegistry);\n      console.log(this.pluginServer);\n      console.log(this.pluginSupport);\n      console.log(this.ovsxClientProvider);\n    }\n    // there is also other logics\n}\n","import { CommandContribution} from '@theia/core';\nimport { WebSocketConnectionProvider } from '@theia/core/lib/browser';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { AutoGitBackendService } from '../common/protocol';\nimport { AUTO_GIT_BACKEND_PATH } from '../common/constants';\nimport { AutoGitCommandContribution } from './auto-git-contribution';\n\nexport default new ContainerModule(bind => {\n    bind(CommandContribution).to(AutoGitCommandContribution).inSingletonScope();\n\n    bind(AutoGitBackendService).toDynamicValue(ctx => {\n        const connection = ctx.container.get(WebSocketConnectionProvider);\n        return connection.createProxy<AutoGitBackendService>(AUTO_GIT_BACKEND_PATH);\n    }).inSingletonScope();\n\n});\n","export const STAGE = {\n  NOT_INIT: 0,\n  GIT_READY: 1,\n  CLONE_ING: 2,\n  CLONED: 3\n};\n\nexport const AUTO_GIT_BACKEND_PATH = '/services/mw-auto-git';","export const AutoGitBackendService = Symbol('AutoGitBackendService');\n\nimport { ConfigFile } from '../shared';\n\nexport interface AutoGitBackendService {\n    setPluginsInstalled(): any,\n    getConfig(): Promise<ConfigFile|null>\n    applyGitConfig(): Promise<RemoteResponse>\n    startClone(): Promise<RemoteResponse>\n    getStatus(): Promise<StatusResponse>\n    getDefaultWorkspace(): Promise<string>\n    remoteAPI(opts:any): Promise<RemoteResponse>,\n}\n\nexport interface StatusResponse {\n    stage: number;\n    projectDir: string;\n    configReady: boolean;\n    pluginsInstalled: boolean;\n    repo: {\n        url?:string;\n        dir?:string;\n    };\n};\n\nexport interface RemoteResponse {\n    ok: boolean;\n    message?: string;\n    data?: any;\n}"],"names":[],"sourceRoot":""}